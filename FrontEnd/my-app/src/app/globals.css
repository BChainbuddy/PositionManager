@tailwind base;
@tailwind components;
@tailwind utilities;

@media (min-width: 2560px) and (max-width: 2999px) {
  html {
    font-size: clamp(0.8rem, 0.7vw + 0.6rem, 5rem);
  }
}

@media (min-width: 1300px) and (max-width: 2559px) {
  html {
    font-size: clamp(0.3rem, 0.8vw + 0.6rem, 10rem);
  }
}

@media (min-width: 976px) and (max-width: 1299px) {
  html {
    font-size: clamp(0.3rem, 0.8vw + 0.3rem, 10rem);
  }
}

@media (min-width: 3000px) {
  html {
    font-size: clamp(0.8rem, 0.7vw + 0.8rem, 5rem);
  }
}

::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: #061a1b;
}

::-webkit-scrollbar-thumb {
  background-color: #01ff39;
  border-radius: 10px;
  border: 2px solid #01ff39;
}

* {
  scrollbar-width: thin;
  scrollbar-color: #01ff39 #061a1b;
}

body {
  background-color: #041516;
}

.juraThick {
  font-family: var(--font-jura); /* Use CSS variable */
  font-weight: 500; /* Adjust to a standard numeric value */
}

.carouselUp {
  display: flex;
  flex-direction: column;
  animation: scrollUp 30s linear infinite; /* Adjust the timing to match the content height */
}

.carouselDown {
  display: flex;
  flex-direction: column;
  animation: scrollDown 30s linear infinite; /* Adjust the timing to match the content height */
}

.carouselDown:hover,
.carouselUp:hover {
  animation-play-state: paused;
}

@keyframes scrollUp {
  to {
    transform: translateY(calc(-50% - 0.5rem));
  }
}

@keyframes scrollDown {
  to {
    transform: translateY(calc(50% - 0.5rem));
  }
}

.scrollerUp {
  max-width: 600px;
  -webkit-mask: linear-gradient(transparent, white 20%, white 80%, transparent);
  mask: linear-gradient(transparent, white 20%, white 80%, transparent);
  overflow: hidden;
}

.scrollerDown {
  max-width: 600px;
  display: flex;
  align-items: flex-end;
  -webkit-mask: linear-gradient(transparent, white 20%, white 80%, transparent);
  mask: linear-gradient(transparent, white 20%, white 80%, transparent);
  overflow: hidden;
}

.scroller__inner {
  width: max-content;
  flex-wrap: nowrap;
  animation: scroll var(--_animation-duration, 40s)
    var(--_animation-direction, forwards) linear infinite;
}

.scrollDownText {
  animation: scrollText 2s ease-in-out infinite;
}

@keyframes scrollText {
  50% {
    transform: translateY(-20%);
  }
}

.title {
  animation: headerAnimation 5sec linear forwards;
}

@keyframes headerAnimation {
  0% {
    mask: linear-gradient(90deg, transparent, transparent);
  }
  100% {
    mask: linear-gradient(
      90deg,
      transparent,
      10% white,
      90% white,
      transparent
    );
  }
}

.lineMask {
  -webkit-mask: linear-gradient(transparent, white);
  mask: linear-gradient(transparent, white 5%);
}

.trade {
  animation: fadeInTitle 1.25s 0.5s ease-in forwards;
  opacity: 0;
}

.forge {
  animation: fadeInTitle 1.25s 1.25s ease-in forwards;
  opacity: 0;
}

@keyframes fadeInTitle {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

.iconText {
  opacity: 0;
  transform: translateY(2rem) scale(0.8);
}

.iconTextFinished {
  animation: IconTextAnimation 1s linear forwards;
}

.iconImageFinished {
  animation: IconImageAnimation 1s linear forwards;
}

@keyframes IconTextAnimation {
  0% {
    transform: translateY(-1.5rem) scale(0.8) rotate(-15deg);
    opacity: 0;
  }
  60% {
    transform: translateY(0.5rem);
    opacity: 1;
  }
  80% {
    transform: translateY(-0.25rem);
    opacity: 1;
  }
  100% {
    transform: translateY(0) scale(1) rotate(0deg);
    opacity: 1;
  }
  /* 0% {
    transform: translateY(-1rem) scale(0.8) rotate(-15deg);
    opacity: 0;
  }
  100% {
    transform: translateY(0) scale(1) rotate(0deg);
    opacity: 1;
  } */
}

@keyframes IconImageAnimation {
  80% {
    filter: drop-shadow(0 0 0 #01ff39);
  }
  100% {
    filter: drop-shadow(-0.1rem -0.1rem 0.1rem #01ff39);
  }
}

.stepCardLeft {
  opacity: 0;
  transform: translateX(-2rem);
}

.stepCardRight {
  opacity: 0;
  transform: translateX(2rem);
}

.stepCardFinished {
  animation: stepCardFadeIn 1s ease-in forwards;
}

@keyframes stepCardFadeIn {
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

.header {
  background: linear-gradient(
    0.25turn,
    #113222,
    #309512 25%,
    #52ff00 50%,
    #113222
  );
  /* background: linear-gradient(
    0.25turn,
    #113222,
    #30951281 25%,
    #52ff0060 50%,
    #113222
  ); */
}

.connectModal {
  transform: translate(-50%, -50%);
  animation: showModal 0.4s linear forwards;
}

@keyframes showModal {
  0% {
    opacity: 0; /* Start completely transparent */
    top: 55%; /* Start slightly lower */
    background-color: rgba(0, 0, 0, 0); /* Start fully transparent */
    border: 0.1rem solid transparent; /* Start with no visible border */
    color: #ffffff30;
  }

  50% {
    opacity: 0.8; /* Fade to 80% opacity */
    background-color: rgba(
      0,
      0,
      0,
      0.5
    ); /* Transition to a semi-transparent background */
    border: 0.1rem solid rgba(255, 255, 255, 0.4); /* Light border during the animation */
    top: 52%; /* Move closer to the center */
    color: #ffffff60;
  }

  100% {
    opacity: 1; /* Fully visible */
    top: 50%; /* Final position centered */
    background-color: rgba(0, 0, 0, 0.99); /* End with darker background */
    border: 0.1rem solid rgba(255, 255, 255, 0.7); /* Final light border */
    color: #ffffff;
  }
}

.positionsGrid {
  /* display: grid;
  grid-template-columns: repeat(auto-fit, 7rem);
  gap: 2rem;
  padding: 1rem;
  width: 36rem;
  margin: 0 auto; */
  position: relative;
  border-radius: 3%;
  background: #002319;
  background-clip: padding-box;
  padding: 1.2rem;
}

.positionsGrid::after {
  position: absolute;
  top: -0.3rem;
  bottom: -0.3rem;
  left: -0.3rem;
  right: -0.3rem;
  background: linear-gradient(0.875turn, #ffe500 0%, #019922 100%);
  content: "";
  z-index: -1;
  border-radius: 3%;
}

.bottomShadow {
  box-shadow: 0 0 0.5rem 0.5rem #01ff39;
}

.bottomTransition {
  animation: bottomTransitionAnimation 1.5s forwards ease-in-out;
}

@keyframes bottomTransitionAnimation {
  0% {
    box-shadow: 0 0 1rem 0.5rem #01ff39;
  }
  20% {
    box-shadow: 0 0 2rem 47vh #ffe500;
  }
  40% {
    box-shadow: 0 0 1.5rem 47vh #01ff39;
    transform: scale(1.05);
  }
  60% {
    box-shadow: 0 0 1.5rem 47vh #ffe500;
    transform: scale(1.1);
  }
  100% {
    box-shadow: 0 0 0.5rem 0.5rem #01ff39;
    transform: scale(1);
  }
}

.topShadow {
  box-shadow: 0 0 0.5rem 0.5rem #01ff39;
}

.topTransition {
  animation: topTransitionAnimation 1.5s forwards ease-in-out;
}

@keyframes topTransitionAnimation {
  0% {
    box-shadow: 0 0 1rem 0.5rem #01ff39;
  }
  20% {
    box-shadow: 0 0 2rem 47vh #ffe500;
  }
  40% {
    box-shadow: 0 0 1.5rem 47vh #01ff39;
    transform: scale(1.05);
  }
  60% {
    box-shadow: 0 0 1.5rem 47vh #ffe500;
    transform: scale(1.1);
  }
  100% {
    box-shadow: 0 0 0.5rem 0.5rem #01ff39;
    transform: scale(1);
  }
}

.allPositionsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, 7rem);
  gap: 0.7rem;
  padding: 1rem 0.6rem;
  justify-content: center;
  align-items: center;
  overflow-y: auto;
  grid-auto-rows: 11rem;
}

.textShadow {
  -webkit-text-stroke: 0.05rem #ffe500;
}

.bottomShadowYellow {
  box-shadow: 0 0 0.5rem 0.5rem #ffe500;
}

.topShadowYellow {
  box-shadow: 0 0 0.5rem 0.5rem #ffe500;
}

.spin {
  animation: spinAnimation 0.25s linear forwards;
}

@keyframes spinAnimation {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(180deg);
  }
}

@property --gradient-angle {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

.forgeCard {
  background: #002114;
  border-radius: 0.5rem;

  position: relative;
}

.forgeCard::before,
.forgeCard::after {
  content: "";
  position: absolute;
  inset: -0.3rem;
  z-index: -1;
  background: conic-gradient(
    from var(--gradient-angle),
    #ffe500,
    #019922,
    #ffe500
  );
  border-radius: inherit;
  animation: rotation 20s linear infinite;
}

.forgeCard::after {
  filter: blur(0.5rem);
}

@keyframes rotation {
  0% {
    --gradient-angle: 0deg;
  }
  100% {
    --gradient-angle: 360deg;
  }
}

.dexGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, 6rem);
  gap: 0.5rem;
  width: 80%;
  margin: 1rem auto 0 auto;
  position: relative;
  padding: 1rem 0;
  background: #01992290;
  justify-content: space-evenly;
  justify-items: center;
  align-content: start;
  align-items: center;
  height: 8rem;
  border-radius: 1rem;
}

.disabled {
  pointer-events: none;
  cursor: not-allowed;
}
